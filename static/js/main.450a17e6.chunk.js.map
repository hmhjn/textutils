{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlfor","TextForm","useState","text","setText","style","color","head","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alert","alert","msg","App","setMode","setAlert","message","setTimeout","document","body","mpde","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.450a17e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import {Link} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n        </li> */}\r\n        \r\n         \r\n      </ul>\r\n      {/* <form className=\"d-flex\"> */}\r\n      \r\n       {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" /> */}\r\n        {/* <button classNameName=\"btn btn-outline-primary\" type=\"submit\">search</button> */}\r\n      {/* </form> */}\r\n\r\n    \r\n\r\n       <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label \" htmlfor=\"flexSwitchCheckDefault\">Enable darkmode</label>\r\n</div> \r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\nNavbar.propTypes = {title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired}\r\n\r\n\r\nNavbar.defaultProps ={\r\n    title:\"Set title here\",\r\n    aboutText:\"About\"\r\n}","\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick= ()=>{\r\n      // console.log(\"Uppercase was clicked \"+text);\r\n       let newText = text.toUpperCase();\r\n       setText(newText)\r\n       props.showAlert(\"Converted to uppercase\",\"success\")\r\n    }\r\n    const handleLowClick= ()=>{\r\n        // console.log(\"Uppercase was clicked \"+text);\r\n         let newText = text.toLowerCase();\r\n         setText(newText)\r\n         props.showAlert(\"Converted to lowercase\",\"success\")\r\n      }\r\n      const handleClearClick= ()=>{\r\n        // console.log(\"Uppercase was clicked \"+text);\r\n         let newText = \"\"\r\n         setText(newText)\r\n         props.showAlert(\"Cleared\",\"success\")\r\n      }\r\n    const handleOnChange= (event)=>{\r\n        //console.log(\"On change \")\r\n        setText(event.target.value);\r\n     }\r\n \r\n    const [text, setText] = useState('Enter here');\r\n   \r\n    return (\r\n        <>\r\n  <div className=\"container\" style={{color: props.mode==='dark'?'white':'grey'}}> \r\n   <h1>{props.head}</h1>\r\n<div className=\"mb-3\">\r\n\r\n  <textarea className=\"form-control \" value ={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'light'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to upperCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleLowClick}>Convert to lowerCase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear</button>\r\n{/* <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy</button> */}\r\n  </div> \r\n  <div className=\"container my-3\" style={{backgroundColor: props.mode==='dark'?'black':'light',color :props.mode==='dark'?'white':'black'}}>\r\n   <h1>Your text summary</h1>\r\n   <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n   <p>{0.08*text.split(\" \").length} Minutes to read</p>\r\n   <h3>Preview</h3>\r\n   <p>{text.length>0?text:\"Enter something in the text box above to preview here\"}</p>\r\n  </div>\r\n  </>  \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        \r\n           props.alert&& <div className=\"alert alert- alert-dismissible fade show\" role=\"alert\">\r\n  <strong>{props.alert.type}</strong> {props.alert.msg}\r\n  \r\n</div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","\nimport './App.css';\n//import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n//import Im from './Images/run.jpeg';\n//import Card from './Component/card';\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// }from  \"react-router-dom\";\n\n\n\n function App() {\n   const [mode,setMode] = useState('light');\n   const [alert,setAlert]= useState(null);\n\n   const showAlert=(message,type)=>\n   {\n  setAlert({\n     msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n          setAlert(null);\n    }, 3000)\n     }\n   const toggleMode=()=>\n   {\n     if(mode==='light'){\n            setMode('dark');\n   document.body.style.backgroundColor= 'grey';\n     showAlert(\"Dark mode is enabled\",\"success\");\n     }\n     else{\n       setMode('light');\n       document.body.style.backgroundColor= 'white';\n      showAlert(\"Light mode is enabled\",\"success\");\n    }\n  }\n  return (\n<>\n {/* <Navbar title=\"Textutils\" aboutText=\"About\"/>   */}\n\n{/* <Router> */}\n<Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n {/* <Im /> */}\n\n\n<div className=\"container my-3\">\n\n{/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n         \n          {/* <Route exact path=\"/\"> */}\n          {/* <TextForm  showAlert={showAlert} head=\"Enter the text to analyse below \" mode={mode}/> */}\n          {/* </Route>\n        </Switch> */}\n       \n  <TextForm  showAlert={showAlert} head=\"Enter the text to analyse below \" mpde={mode}/>   \n{/* <About/>  */}\n</div>\n {/* </Router>  */}\n</>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}